services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../deployment/frontend.Dockerfile
      target: final
    ports:
      - "5173:5173"
    env_file:
      - .env
    restart: always
    profiles:
      - frontend
      - full

  backend:
    build:
      context: ./backend
      dockerfile: ../deployment/backend.Dockerfile
      target: final
    ports:
      - "8080:8080"
    env_file:
      - .env
    secrets:
      - jwt_public_key
      - jwt_private_key
    healthcheck:
      test: curl "http://0.0.0.0:8080/health"
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - backend
      - full

  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    env_file:
      - .env
    expose:
      - 5432
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - backend
      - full

  redis:
    image: redis:latest
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - backend
      - full

volumes:
  pg-data:
    labels:
      stage: final
  redis_data:
    labels:
      stage: final

secrets:
  jwt_public_key:
    file: ./secrets/jwt_public_key.pem
  jwt_private_key:
    file: ./secrets/jwt_private_key.pem
