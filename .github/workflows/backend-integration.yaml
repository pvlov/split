name: Backend Integration Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install swagger-cli
        run: npm install @openapitools/openapi-generator-cli -g

      - name: Create OpenAPI models
        run: make openapi-models

      - name: Cache cargo artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: cargo fetch

      - name: Run Cargo fmt
        run: cargo fmt -- --check

      - name: Run Clippy
        run: cargo clippy --bin split --no-deps -- -D warnings

      - name: Run Tests
        run: cargo test --all-targets

  validate-openapi:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install swagger-cli
        run: npm install -g @apidevtools/swagger-cli

      - name: Validate OpenAPI specs
        run: |
          set -e
          for file in $(find ./openapi -name '*.yaml'); do
            echo "Validating $file"
            if ! output=$(swagger-cli validate "$file" 2>&1); then
              echo "Validation failed for $file"
              echo "$(output)"
              exit 1
            else
              echo "Validation successful for $file"
            fi
          done
